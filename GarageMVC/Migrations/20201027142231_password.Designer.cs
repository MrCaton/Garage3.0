// <auto-generated />
using System;
using GarageMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GarageMVC.Migrations
{
    [DbContext(typeof(GarageMVCContext))]
    [Migration("20201027142231_password")]
    partial class password
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GarageMVC.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "nelsonmandela@gmail.com",
                            FirstName = "Nelson",
                            LastName = "Mandela",
                            UserName = "Nmandela"
                        });
                });

            modelBuilder.Entity("GarageMVC.Models.ParkedVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenceNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("NrOfWheels")
                        .HasColumnType("int");

                    b.Property<int>("StartLocation")
                        .HasColumnType("int");

                    b.Property<int>("VehicleType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("ParkedVehicle");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArrivalTime = new DateTime(2020, 10, 26, 15, 22, 30, 962, DateTimeKind.Local).AddTicks(4870),
                            Brand = "Volkswagen",
                            Color = "Grey",
                            LicenceNr = "BIL111",
                            Model = "Golf",
                            NrOfWheels = 4,
                            StartLocation = 0,
                            VehicleType = 0
                        },
                        new
                        {
                            Id = 2,
                            ArrivalTime = new DateTime(2020, 10, 26, 15, 22, 30, 965, DateTimeKind.Local).AddTicks(1750),
                            Brand = "Ducati",
                            Color = "Red",
                            LicenceNr = "MOT111",
                            Model = "Retro",
                            NrOfWheels = 2,
                            StartLocation = 1,
                            VehicleType = 1
                        },
                        new
                        {
                            Id = 3,
                            ArrivalTime = new DateTime(2020, 10, 25, 15, 22, 30, 965, DateTimeKind.Local).AddTicks(1797),
                            Brand = "Boeing",
                            Color = "White",
                            LicenceNr = "AIR111",
                            Model = "777",
                            NrOfWheels = 12,
                            StartLocation = 2,
                            VehicleType = 3
                        },
                        new
                        {
                            Id = 4,
                            ArrivalTime = new DateTime(2020, 10, 24, 15, 22, 30, 965, DateTimeKind.Local).AddTicks(1802),
                            Brand = "Bertram",
                            Color = "White",
                            LicenceNr = "BOA111",
                            Model = "31 Flybridge Cruiser",
                            NrOfWheels = 0,
                            StartLocation = 5,
                            VehicleType = 4
                        },
                        new
                        {
                            Id = 5,
                            ArrivalTime = new DateTime(2020, 10, 23, 15, 22, 30, 965, DateTimeKind.Local).AddTicks(1806),
                            Brand = "Mercedes Benz",
                            Color = "Red",
                            LicenceNr = "BUS111",
                            Model = "Citario",
                            NrOfWheels = 4,
                            StartLocation = 8,
                            VehicleType = 2
                        },
                        new
                        {
                            Id = 6,
                            ArrivalTime = new DateTime(2020, 10, 22, 15, 22, 30, 965, DateTimeKind.Local).AddTicks(1809),
                            Brand = "Mercedes Benz",
                            Color = "Black",
                            LicenceNr = "BIL222",
                            Model = "C-Class",
                            NrOfWheels = 4,
                            StartLocation = 10,
                            VehicleType = 0
                        },
                        new
                        {
                            Id = 7,
                            ArrivalTime = new DateTime(2020, 10, 21, 15, 22, 30, 965, DateTimeKind.Local).AddTicks(1813),
                            Brand = "BMW",
                            Color = "Green",
                            LicenceNr = "MOT222",
                            Model = "S 1000 RR",
                            NrOfWheels = 2,
                            StartLocation = 11,
                            VehicleType = 1
                        },
                        new
                        {
                            Id = 8,
                            ArrivalTime = new DateTime(2020, 10, 20, 15, 22, 30, 965, DateTimeKind.Local).AddTicks(1816),
                            Brand = "SAAB",
                            Color = "Grey",
                            LicenceNr = "AIR222",
                            Model = "Gripen",
                            NrOfWheels = 3,
                            StartLocation = 12,
                            VehicleType = 3
                        },
                        new
                        {
                            Id = 9,
                            ArrivalTime = new DateTime(2020, 10, 19, 15, 22, 30, 965, DateTimeKind.Local).AddTicks(1820),
                            Brand = "Sea Ray",
                            Color = "White",
                            LicenceNr = "BOA222",
                            Model = "SLX 400 OB",
                            NrOfWheels = 0,
                            StartLocation = 15,
                            VehicleType = 4
                        },
                        new
                        {
                            Id = 10,
                            ArrivalTime = new DateTime(2020, 10, 18, 15, 22, 30, 965, DateTimeKind.Local).AddTicks(1823),
                            Brand = "Man",
                            Color = "Blue",
                            LicenceNr = "BUS222",
                            Model = "SR 240",
                            NrOfWheels = 4,
                            StartLocation = 18,
                            VehicleType = 2
                        });
                });

            modelBuilder.Entity("GarageMVC.Models.ParkedVehicle", b =>
                {
                    b.HasOne("GarageMVC.Models.Member", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("MemberId");
                });
#pragma warning restore 612, 618
        }
    }
}
